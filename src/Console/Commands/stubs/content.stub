<?php

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateContentTable extends Migration
{
    /**
     * @var string
     */
    protected $modelsTable;

    /**
     * @var string
     */
    protected $fieldsTable;

    /**
     * @var string
     */
    protected $categoriesTable;

    /**
     * @var string
     */
    protected $itemsTable;

    /**
     * @var string
     */
    protected $dataTable;

    /**
     * CreateCatalogTable constructor.
     */
    public function __construct()
    {
        $this->modelsTable = Config::get('content.models_table');
        $this->fieldsTable = Config::get('content.fields_table');
        $this->categoriesTable = Config::get('content.categories_table');
        $this->itemsTable = Config::get('content.items_table');
        $this->dataTable = Config::get('content.data_table');
    }

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create($this->modelsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('name', 32)->unique();
            $table->string('description')->nullable();
            $table->string('type', 32);
            $table->boolean('is_system')->default(false);
            $table->timestamps();
        });

        Schema::create($this->fieldsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('model_id');
            $table->string('name', 32);
            $table->string('display_name', 64)->nullable();
            $table->string('description')->nullable();
            $table->boolean('is_required')->default(false);
            $table->boolean('is_display')->default(false);
            $table->string('input_type', 32);
            $table->text('input_data')->nullable();
            $table->timestamps();
        });

        // Create table for storing categories
        Schema::create($this->categoriesTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('parent_id')->default(0);
            $table->unsignedInteger('model_id')->default(0);
            $table->string('name', 32);
            $table->string('slug');
            $table->text('description');
            $table->string('type', 32);
            $table->integer('position')->default(0);
            $table->string('image')->nullable();
            $table->boolean('is_active')->default(true);
            $table->string('meta_title')->nullable();
            $table->string('meta_keywords')->nullable();
            $table->string('meta_description')->nullable();
            $table->timestamps();

            $table->unique(['name']);
        });

        // Create table for storing posts
        Schema::create($this->itemsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('parent_id')->default(0);
            $table->unsignedInteger('category_id');
            $table->string('title');
            $table->string('description')->nullable();
            $table->string('slug')->nullable();
            $table->integer('position')->default(0);
            $table->string('image')->nullable();
            $table->boolean('is_active')->default(true);
            $table->timestamps();

            $table->index(['category_id']);
        });

        // Create table for storing posts
        Schema::create($this->dataTable, function (Blueprint $table) {
            $table->unsignedInteger('id');
            $table->text('data');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->dataTable);
        Schema::dropIfExists($this->itemsTable);
        Schema::dropIfExists($this->categoriesTable);
        Schema::dropIfExists($this->fieldsTable);
        Schema::dropIfExists($this->modelsTable);
    }
}